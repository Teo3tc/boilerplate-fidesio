/*! For license information please see main.js.LICENSE.txt */
(()=>{var e,t,r,n={"./src/index.js":(e,t,r)=>{"use strict";function n(e,t,r,n,o,a,s){try{var i=e[a](s),c=i.value}catch(e){return void r(e)}i.done?t(c):Promise.resolve(c).then(n,o)}function o(e){return function(){var t=this,r=arguments;return new Promise((function(o,a){var s=e.apply(t,r);function i(e){n(s,o,a,i,c,"next",e)}function c(e){n(s,o,a,i,c,"throw",e)}i(void 0)}))}}function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}r.r(t),r.d(t,{default:()=>s});var s=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.createContent(),this.createPages(),this.createNavigation(),this.addLinkListeners(),this.addEventListeners()}var t,n,s,i,c;return t=e,n=[{key:"createNavigation",value:(c=o(regeneratorRuntime.mark((function e(){var t,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e("vendors-node_modules_lodash_each_js"),r.e("src_components_Navigation_js")]).then(r.bind(r,"./src/components/Navigation.js"));case 2:t=e.sent,n=t.default,this.navigation=new n({template:this.template});case 5:case"end":return e.stop()}}),e,this)}))),function(){return c.apply(this,arguments)})},{key:"createContent",value:function(){this.template=this.content.getAttribute("data-template")}},{key:"createPages",value:(i=o(regeneratorRuntime.mark((function e(){var t,n,o,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e("vendors-node_modules_lodash_each_js"),r.e("src_pages_home_index_js")]).then(r.bind(r,"./src/pages/home/index.js"));case 2:return t=e.sent,n=t.default,e.next=6,Promise.all([r.e("vendors-node_modules_lodash_each_js"),r.e("src_pages_about_index_js")]).then(r.bind(r,"./src/pages/about/index.js"));case 6:o=e.sent,a=o.default,this.pages={home:new n,about:new a},this.page=this.pages[this.template],this.page.create();case 11:case"end":return e.stop()}}),e,this)}))),function(){return i.apply(this,arguments)})}],n&&a(t.prototype,n),s&&a(t,s),Object.defineProperty(t,"prototype",{writable:!1}),e}()},"./styles/index.scss":(e,t,r)=>{"use strict";r.r(t)},"./node_modules/webpack/hot sync ^\\.\\/log$":(e,t,r)=>{var n={"./log":"./node_modules/webpack/hot/log.js"};function o(e){var t=a(e);return r(t)}function a(e){if(!r.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}o.keys=function(){return Object.keys(n)},o.resolve=a,e.exports=o,o.id="./node_modules/webpack/hot sync ^\\.\\/log$"}},o={};function a(e){var t=o[e];if(void 0!==t)return t.exports;var r=o[e]={id:e,loaded:!1,exports:{}};return n[e].call(r.exports,r,r.exports,a),r.loaded=!0,r.exports}a.m=n,e=[],a.O=(t,r,n,o)=>{if(!r){var s=1/0;for(d=0;d<e.length;d++){for(var[r,n,o]=e[d],i=!0,c=0;c<r.length;c++)(!1&o||s>=o)&&Object.keys(a.O).every((e=>a.O[e](r[c])))?r.splice(c--,1):(i=!1,o<s&&(s=o));if(i){e.splice(d--,1);var l=n();void 0!==l&&(t=l)}}return t}o=o||0;for(var d=e.length;d>0&&e[d-1][2]>o;d--)e[d]=e[d-1];e[d]=[r,n,o]},a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},a.d=(e,t)=>{for(var r in t)a.o(t,r)&&!a.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},a.f={},a.e=e=>Promise.all(Object.keys(a.f).reduce(((t,r)=>(a.f[r](e,t),t)),[])),a.u=e=>e+".js",a.miniCssF=e=>e+".css",a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),t={},r="node-starter:",a.l=(e,n,o,s)=>{if(t[e])t[e].push(n);else{var i,c;if(void 0!==o)for(var l=document.getElementsByTagName("script"),d=0;d<l.length;d++){var u=l[d];if(u.getAttribute("src")==e||u.getAttribute("data-webpack")==r+o){i=u;break}}i||(c=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,a.nc&&i.setAttribute("nonce",a.nc),i.setAttribute("data-webpack",r+o),i.src=e),t[e]=[n];var p=(r,n)=>{i.onerror=i.onload=null,clearTimeout(h);var o=t[e];if(delete t[e],i.parentNode&&i.parentNode.removeChild(i),o&&o.forEach((e=>e(n))),r)return r(n)},h=setTimeout(p.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=p.bind(null,i.onerror),i.onload=p.bind(null,i.onload),c&&document.head.appendChild(i)}},a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e;a.g.importScripts&&(e=a.g.location+"");var t=a.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=e})(),(()=>{var e={main:0};a.f.j=(t,r)=>{var n=a.o(e,t)?e[t]:void 0;if(0!==n)if(n)r.push(n[2]);else{var o=new Promise(((r,o)=>n=e[t]=[r,o]));r.push(n[2]=o);var s=a.p+a.u(t),i=new Error;a.l(s,(r=>{if(a.o(e,t)&&(0!==(n=e[t])&&(e[t]=void 0),n)){var o=r&&("load"===r.type?"missing":r.type),s=r&&r.target&&r.target.src;i.message="Loading chunk "+t+" failed.\n("+o+": "+s+")",i.name="ChunkLoadError",i.type=o,i.request=s,n[1](i)}}),"chunk-"+t,t)}},a.O.j=t=>0===e[t];var t=(t,r)=>{var n,o,[s,i,c]=r,l=0;if(s.some((t=>0!==e[t]))){for(n in i)a.o(i,n)&&(a.m[n]=i[n]);if(c)var d=c(a)}for(t&&t(r);l<s.length;l++)o=s[l],a.o(e,o)&&e[o]&&e[o][0](),e[s[l]]=0;return a.O(d)},r=self.webpackChunknode_starter=self.webpackChunknode_starter||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})(),a.O(void 0,["vendors-node_modules_webpack-dev-server_client_index_js_http_localhost_8080-node_modules_webp-ef8580"],(()=>a("./src/index.js"))),a.O(void 0,["vendors-node_modules_webpack-dev-server_client_index_js_http_localhost_8080-node_modules_webp-ef8580"],(()=>a("./styles/index.scss")));var s=a.O(void 0,["vendors-node_modules_webpack-dev-server_client_index_js_http_localhost_8080-node_modules_webp-ef8580"],(()=>a("./node_modules/webpack-dev-server/client/index.js?http://localhost:8080")));s=a.O(s)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,